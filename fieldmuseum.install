<?php

/**
 * Implements hook_install().
 */
function fieldmuseum_install() {

  // Site theme settings.
  theme_enable(array('esquif'));
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();
  variable_set('theme_default', 'esquif');
  variable_set('theme_esquif_settings', array(
    'toggle_logo' => 0,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 1,
    'toggle_comment_user_picture' => 1,
    'toggle_favicon' => 0,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 1,
    'logo_path' => '',
    'logo_upload' => '',
    'default_favicon' => 1,
    'favicon_path' => '',
    'favicon_upload' => '',
    'zen_breadcrumb' => 'yes',
    'zen_breadcrumb_separator' => ' â€º ',
    'zen_breadcrumb_home' => 1,
    'zen_breadcrumb_trailing' => 0,
    'zen_breadcrumb_title' => 0,
    'zen_skip_link_anchor' => 'main-menu',
    'zen_skip_link_text' => 'Jump to navigation',
    'zen_html5_respond_meta' => array(
      'respond' => 'respond',
      'html5' => 'html5',
      'meta' => 'meta'
    ),
    'zen_rebuild_registry' => 0,
    'zen_wireframes' => 0
  ));

  // Admin theme settings.
  variable_set('admin_theme', 'ember');
  variable_set('node_admin_theme', '1');
  variable_set('theme_ember_settings', array(
    'toggle_logo' => 1,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 1,
    'toggle_comment_user_picture' => 1,
    'toggle_comment_user_verification' => 1,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 1,
    'logo_path' => '',
    'logo_upload' => '',
    'default_favicon' => 1,
    'favicon_path' => '',
    'favicon_upload' => '',
    'display_breadcrumbs' => 0,
    'ember_no_fadein_effect' => 1
  ));

  // Home page is the `home` panel page.
  variable_set('site_slogan', 'The Field Museum provides collection-based research and learning for greater public understanding and appreciation of the world.');
  variable_set('site_frontpage', 'home');

  // Allow visitor account creation, but with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create some stub nodes.
  $stubs = \Symfony\Component\Yaml\Yaml::parse(DRUPAL_ROOT .'/'. drupal_get_path('profile', 'fieldmuseum') .'/placeholder-content.yml');
  array_walk($stubs, function ($args) {
    call_user_func_array('_fieldmuseum_create_node', $args);
  });
}

/**
 * Creates stub nodes with paths and menu items from simple arguments.
 */
function _fieldmuseum_create_node($bundle, $label, $path, $menu_name = FALSE) {
  global $user;
  $node = new stdClass();
  $node->title = $label;
  $node->type = $bundle;
  $node->path = array(
    'alias' => $path,
  );

  if ($menu_name) {
    $parent_path = explode('/', $path);
    array_pop($parent_path);
    $parent_path = implode('/', $parent_path);
    $parent_link = menu_link_get_preferred(drupal_get_normal_path($parent_path));

    $node->menu = array(
      'enabled' => 1,
      'menu_name' => $menu_name,
      'link_path' => $path,
      'link_title' => $label,
      'description' => '',
    );
    if ($parent_link) {
      $node->menu['plid'] = $parent_link['mlid'];
    }
  }

  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->status = 1;
  $node->promote = 0;
  $node->comment = 1;
  $node = node_submit($node);
  node_save($node);
}
