#!/usr/bin/env php
<?php

if (PHP_SAPI !== 'cli') {
    echo 'Warning: Assetic should be invoked via the CLI version of PHP, not the ' . PHP_SAPI . ' SAPI' . PHP_EOL;
}

call_user_func(function () {
    $loader = require __DIR__ . '/../src/bootstrap.php';
    $container = new Bangpound\Assetic\Container(dirname(__DIR__), getenv('ASSETIC_DEBUG') !== '0', array(
        'conf' => 'assetic.yml',
        'conf_paths' => array(getcwd()),
        'class_loader' => $loader,
        'cache_dir' => '/tmp',
    ));

    if ($container['console.input']->hasParameterOption(array('--config', '-c'))) {
        $conf_paths = $container['conf_paths'];
        $conf_paths[] = dirname($container['console.input']->getParameterOption(array('--config', '-c')));
        $container['conf_paths'] = $conf_paths;
    }

    $builder = new \Tacker\LoaderBuilder($container['conf_paths'], $container['cache_dir'], $container['debug']);
    $builder
        ->addDefaultNormalizers()
        ->configureNormalizers(function (\Tacker\Normalizer\ChainNormalizer $normalizer) use ($container) {
            $normalizer->add(new \Tacker\Normalizer\EnvironmentNormalizer());
            $normalizer->add(new \Tacker\Normalizer\PimpleNormalizer($container));
        });

    $loader = $builder->build();
    $config = $loader->load($container['conf']);

    foreach ($config['files'] as $path) {
        includeIfExists($path);
    }

    $container->register(new \Bangpound\Pimple\Provider\ProviderServiceProvider($config['providers']));
    $container['console']->run($container['console.input']);
});
