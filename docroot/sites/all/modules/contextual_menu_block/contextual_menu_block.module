<?php

/**
 * Implements hook_block_info()
 */
function contextual_menu_block_block_info() {
  $info['contextual-menu-block'] = array(
    'info' => 'Contextual Menu Block',
    'cache' => DRUPAL_NO_CACHE,
  );

  return $info;
}

/**
 * Implements hook_block_view()
 */
function contextual_menu_block_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'contextual-menu-block':
      // Get the node info for the current page.
      $node = menu_get_object();
      
      // Grab the section taxonomy term.
      $field = variable_get('contextual_menu_block_taxonomy_field', '');
      if (empty($field)) {
        break;
      }
      $taxo = $node->{$field}['und'][0]['taxonomy_term']->name;

      // Search the menu for the menu title with the same name as the taxonomy term.
      $top = db_select('menu_links')
      ->fields('menu_links', array('menu_name', 'mlid'))
      ->condition('link_title', $taxo)
      ->execute()->fetchAssoc();
      
      // Get menu item based on nid.
      $current = db_select('menu_links')
      ->fields('menu_links')
      ->condition('link_path', 'node/'.$node->nid)
      ->execute()->fetchAssoc();
      
      // Build active trail mlids.
      $active_trail = array();
      for ($i=1; $i<$current['depth']+1; $i++) {
        $active_trail[] = $current['p'.$i];
      }
            
      // Retrieve the entire menu tree.
      $tree = menu_build_tree($top['menu_name'], array('active_trail' => $active_trail, 'max_depth' => 3));

      // Prune the tree to the branch we want.
      foreach ($tree as $key => $value) {
        if (strpos($key, $top['mlid']) === FALSE) {
          unset($tree[$key]);
        }
      } 

      // Render the tree.
      $title = array('#markup' => check_plain($top['menu_name']));
      $block['subject_array'] = $title;
      $block['subject'] = drupal_render($title);
      $block['content']['#markup'] = drupal_render(menu_tree_output($tree));

      break;
  }
    
  return $block;
}

/**
 * Implements hook_block_configure()
 */
function contextual_menu_block_block_configure($delta = '') {
  $form = array();
  if ($delta == 'contextual-menu-block') {

    $field_list = array();
    $fields = field_info_fields();
    if (!empty($fields)) {
      foreach ($fields as $field) {
        if ($field['type'] == 'taxonomy_term_reference') {
          $field_list[$field['field_name']] = $field['field_name'];
        }
      }
    }
		
    // this code is based on http://api.drupal.org/api/examples/block_example--block_example.module/function/block_example_block_configure/7

    $form['contextual_menu_block_taxonomy_field'] =  array(
      '#type' => 'select',
      '#title' => t('Taxonomy field'),
      '#options' => $field_list,
      '#default_value' => variable_get('contextual_menu_block_taxonomy_field', ''),
      '#description' => t('The selected taxonomy field should list the terms which define the sections wherein contextual menus should appear'),			
    );
  }
  return $form;
}


/** 
 * Implements hook_block_save()
 */
function contextual_menu_block_block_save($delta = '', $edit = array()) {
	if ($delta == 'contextual-menu-block') {
		variable_set('contextual_menu_block_taxonomy_field', $edit['contextual_menu_block_taxonomy_field']);
	}
	return;
}