<?php

/**
 * Implement hook_init().
 */
function fmnh_analytics_init() {
  if (!path_is_admin(current_path())) {
    drupal_add_library('fmnh_analytics', 'analytics', TRUE);
  }
  drupal_add_library('fmnh_analytics', 'chartbeat', TRUE);
}

/**
 * Implement hook_theme_registry_alter().
 *
 * @param $theme_registry
 */
function fmnh_analytics_theme_registry_alter(&$theme_registry) {
  $theme_registry['field']['preprocess functions'] = array_diff($theme_registry['field']['preprocess functions'], array('fmnh_analytics_preprocess_field'));
  $theme_registry['field']['preprocess functions'][] = 'fmnh_analytics_preprocess_field';

  $theme_registry['node']['preprocess functions'] = array_diff($theme_registry['node']['preprocess functions'], array('fmnh_analytics_preprocess_node'));
  $theme_registry['node']['preprocess functions'][] = 'fmnh_analytics_preprocess_node';
}

/**
 * Implement hook_library().
 */
function fmnh_analytics_library() {
  $libraries['analytics'] = array(
    'title' => 'FMNH Analytics',
    'version' => '1.0',
    'js' => array(
      drupal_get_path('module', 'fmnh_analytics') . '/js/ga-custom.js' => array(),
      drupal_get_path('module', 'fmnh_analytics') . '/js/ga-custom-events.js' => array(),
      drupal_get_path('module', 'fmnh_analytics') . '/js/ga-custom-scroll.js' => array(),
    ),
  );
  $libraries['chartbeat'] = array(
    'title' => 'Chartbeat',
    'version' => '1.0',
    'js' => array(
      'var _sf_startpt=(new Date()).getTime()' => array('type' => 'inline', 'scope' => 'header_force'),
      'var _sf_async_config={uid:23411,domain:"fieldmuseum.org",useCanonical:true};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement(\'script\');
    e.setAttribute(\'language\', \'javascript\');
    e.setAttribute(\'type\', \'text/javascript\');
    e.setAttribute(\'src\', \'//static.chartbeat.com/js/chartbeat.js\');
    document.body.appendChild(e);
  }
var oldonload = window.onload;
window.onload = (typeof window.onload != \'function\') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();' => array('type' => 'inline', 'scope' => 'footer'),
    ),
  );
  return $libraries;
}

/**
 * Implement hook_entity_view().
 *
 * @param $entity
 * @param $type
 * @param $view_mode
 * @param $langcode
 */
function fmnh_analytics_entity_view($entity, $type, $view_mode, $langcode) {

  // Decorate social sharing links on nodes.
  if (isset($entity->content['links']['sharing'])) {
    foreach ($entity->content['links']['sharing']['#links'] as $id => &$link) {
      $link['attributes']['data-analytics'] = substr($id, 5) .'-share';
    }
  }
}

/**
 * Implement hook_element_info_alter().
 *
 * @param $type
 */
function fmnh_analytics_element_info_alter(&$type) {
  $type['disqus']['#pre_render'][] = 'fmnh_analytics_disqus_element_pre_render';
}

/**
 * Pre render function to add the disqus analytics script.
 *
 * @param $element
 * @return mixed
 */
function fmnh_analytics_disqus_element_pre_render($element) {
  $element['#attached']['js'][] = drupal_get_path('module', 'fmnh_analytics') . '/js/ga-disqus-callbacks.js';
  $element['#disqus']['callbacks'] = array(
    'onNewComment' => array(
      'Drupal.FMNH.onNewComment',
    ),
  );

  return $element;
}

/**
 * Implement hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function fmnh_analytics_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'webform_client_form_14951':
      $form['#attributes']['data-analytics'] = 'contact-submit';
      break;
  }
}

/**
 * Implements MODULE_preprocess_HOOK().
 */
function fmnh_analytics_preprocess_field(&$variables) {
  $element = $variables['element'];
  $field_name = $element['#field_name'];
  $bundle = $element['#bundle'];

  if ($field_name == 'field_ticket_link') {
    foreach ($variables['items'] as $delta => &$value) {
      $value['#element']['attributes']['data-analytics'] = 'ticketing-'. $bundle;
    }
  }
}

/**
 * Implement menu_attribute_info().
 *
 * @return mixed
 */
function fmnh_analytics_menu_attribute_info() {
  // Add a Tabindex attribute.
  $info['data-analytics'] = array(
    'label' => t('Analytics'),
    'description' => t('Property for Google Analytics.'),
  );
  return $info;
}

/**
 * Implement hook_page_build().
 *
 * @param $page
 */
function fmnh_analytics_page_build(&$page) {
  $page['page_top']['floodlight'] = array(
    '#pre_render' => array('fmnh_analytics_pre_render'),
    '#weight' => -1,
    '#access' => fmnh_analytics_floodlight_access(),
  );
}

function _fmnh_analytics_pages_visibility() {
  // get floodlight pages
  if ($cache = cache_get('fmnh_analytics_floodlight')) {
    $pages = $cache->data;
  }
  else {
    ctools_include('export');
    $result = ctools_export_crud_load_all('fmnh_floodlight');
    $pages = array();
    foreach ($result as $record) {
      if (!isset($record->disabled) || $record->disabled == FALSE) {
        foreach (array_map('trim', preg_split('/(\r\n?|\n)/', $record->pages)) as $path) {
          $pages[$path][] = $record->name;
        }
      }
    }
    cache_set('fmnh_analytics_floodlight', $pages);
  }

  return $pages;
}

function fmnh_analytics_floodlight_access() {

  $pages = _fmnh_analytics_pages_visibility();

  // Convert the Drupal path to lowercase
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
  $patterns = implode("\n", array_keys($pages));
  // Compare the lowercase internal and lowercase path alias (if any).
  $page_match = drupal_match_path($path, $patterns);
  if ($path != $_GET['q']) {
    $page_match = $page_match || drupal_match_path($_GET['q'], $patterns);
  }
  return $page_match;
}

/**
 * Prerender function for floodlight tags.
 */
function fmnh_analytics_pre_render($floodlight) {
  $floodlight = array_merge($floodlight, fmnh_analytics_floodlight_view());
  return $floodlight;
}

function fmnh_analytics_floodlight_view() {
  $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
  $names = array();
  $element = array();
  foreach (_fmnh_analytics_pages_visibility() as $pages => $name) {
    // Convert the Drupal path to lowercase
    // Compare the lowercase internal and lowercase path alias (if any).
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }

    if ($page_match) {
      $names = array_merge($names, $name);
    }
  }

  $records = ctools_export_crud_load_multiple('fmnh_floodlight', $names);
  foreach ($records as $record) {
    $element[] = array(
      '#markup' => $record->tag,
    );
  }

  return $element;
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * @param $module
 * @param $plugin
 * @return string
 */
function fmnh_analytics_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'export_ui') {
    return 'plugins/' . $plugin;
  }
}


/**
 * Implements hook_ctools_plugin_api().
 */
function fmnh_analytics_ctools_plugin_api($module, $api) {
  if ($module == 'fmnh_analytics' && $api == 'default_fmnh_analytics_floodlight') {
    return array('version' => 1);
  }
}

/**
 * @param $variables
 * @param $hook
 */
function fmnh_analytics_preprocess_node(&$variables, $hook) {
  if (isset($variables['node']->in_references) && $variables['node']->in_references) {
    if ($variables['view_mode'] == 'entity_label') {
      $key = 'title_attributes_array';
    }
    else if ($variables['view_mode'] == 'promo') {
      $key = 'content_attributes_array';
    }
    if (isset($key)) {
      $variables[$key]['data-analytics'] = 'explore-'. strtr($variables['type'], '_', '-');
    }
  }
}